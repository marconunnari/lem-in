get_next_room(room)
	uintmax_t	min_distance
	t_room		*next;

	min_distance = 0
	next = NULL;
	foreach neighbour in room->neighbours
		if (neighbour->ant == 0)
			if (min_distance == 0 || neighbour->distance < min_distance)
				next = neighbour;
	return next;

move_ant_from_start(newfullrooms)
	next = get_next_room(start)
	start->ant -= li_info.start_ant;
	next->ant += li_info.start_ant;
	if (start->ant != 0)
		newfullrooms.add(start)
		li_info.start_ant++;
	newfullrooms.add(next)

move_ant(room, newfullrooms)
	next = get_next_room(room)
	next->ant += room->ant;
	room->ant = 0;
	newfullrooms.add(next)

move_ants(fullrooms)
	newfullrooms = NULL
	foreach room in fullrooms
		if (room == li_info.start)
			move_ant_from_start(&newfullrooms)
		else
			move_ant(room, &newfullrooms)
	free_rooms(fullrooms)
	move_ants(newfullrooms)

put_cinnamon(end, 1)
li_info.start_ant = 1;
move_ants(ft_lstnew(start, sizeof(t_room))
