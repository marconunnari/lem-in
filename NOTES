https://en.wikipedia.org/wiki/Minimum_spanning_tree

t_room:
	char		*name
	t_point		*coords;
	t_list		*ants; //(list of unitmax_t)

t_link:
	t_room		room1;
	t_room		room2;
	uintmax_t	closeness;

rooms
links
fullrooms

----- VISUALIZER ------
foreach room in rooms
	draw_room(room)

foreach link in link
	draw_link(link)

negative coords
drawroom(room)
	str = name + ":" + antsnumber
	put_string(room->coords, str)

move
	ant
	room

turn: list of moves
turns

foreach turn in turns
	foreach move in turn
		if move->room != start && move->room != end
			if move->room->ant != 0
				error
		room_ant = get_ant_room(move->ant)
		if (!room_ant)
			error
		if room_ant == start
			room_ant->ant--
		else
			room_ant->ant = 0
		move->room->ant = ant

get_ant_room(int ant)
	if ant > tot_ants
		return NULL
	for each room in rooms
		if room->ant = ant
			return (room)
	if start->ant > ant
		return (start)
	return (end)

----- SOLVER -------

foreach room in fullrooms
	move_ant

move_ant(room)
	unitmax_t	min_closiness
	t_link		selected
	t_list		*antid;
	foreach link in links
		if (link->room1 == room)
			if (!min_closeness || link->closiness < min_closiness)
				selected = link
	ant = pop(selected->room1->ants);
	push(selected->room2->ants++, ant);
